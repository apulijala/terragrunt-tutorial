terraform {

    source = "tfr:///terraform-aws-modules/vpc/aws?version=3.5.0"
    
    extra_arguments "custom_vars" {
        commands = [
            "plan", 
            "apply", 
            "refresh",
            "destroy"
        ]

        required_var_files = [
            "${get_parent_terragrunt_dir()}/common.tfvars"
        ]
    }
    
    before_hook "run_before" {
        commands = [ "plan", "apply" ]    
        execute = [ "echo", "Before plan and Apply Hook" ]
    }

    after_hook "run_after"  {
        commands = [ "plan", "apply" ]
        execute = ["echo", "After plan and Apply hook."]

    }

}

generate "provider" {
    path = "provider.tf"
    if_exists = "overwrite_terragrunt" 
    contents =<<EOF
        provider "aws" {
            region = "eu-west-2"
        }
    EOF
}


remote_state {

    backend = "s3"
    generate = {
        path ="s3-backend-datta.tf"
        if_exists = "overwrite"
    }
   
    config = {
        bucket  = "terraform-state-datta-files"
        key = "${path_relative_to_include()}/dev-terraform.tf.state"
        region = "eu-west-2"
        encrypt = true
        dynamodb_table = "terraform-state-locks"
    }

}